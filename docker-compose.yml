version: "3.8"
services:
  db:
    image: mysql:8.0
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_REACTOR_CONTEXT_PROPAGATION: AUTO
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3356:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - ckt_network

  admin:
    build:
      context: .
      dockerfile: ./admin/Dockerfile
    depends_on:
      - db
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_REACTOR_CONTEXT_PROPAGATION: AUTO
      SPRING_DATASOURCE_URL: jdbc:mysql://${DB_URL}:3306/${DB_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "8081:8081"
    volumes:
      - ./logs:/logs
    networks:
      - ckt_network
    command:
      -javaagent:/app/pinpoint-agent-2.5.4/pinpoint-bootstrap-2.5.4.jar
      -Dpinpoint.agentId=${HOSTNAME}-admin-app
      -Dpinpoint.applicationName=Ckt-Admin
      -Dprofiler.transport.grpc.collector.ip=pinpoint-collector
      -Dprofiler.collector.ip=pinpoint-collector
      -jar app.jar

  gateway:
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE} # docker
      SPRING_REACTOR_CONTEXT_PROPAGATION: AUTO
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - admin
    volumes:
      - ./logs:/logs
    networks:
      - ckt_network
    command:
      -javaagent:/app/pinpoint-agent-2.5.4/pinpoint-bootstrap-2.5.4.jar
      -Dpinpoint.agentId=${HOSTNAME}-gateway-app
      -Dpinpoint.applicationName=Ckt-Gateway
      -Dprofiler.transport.grpc.collector.ip=pinpoint-collector
      -Dprofiler.collector.ip=pinpoint-collector
      -jar app.jar

  collector:
    build:
      context: .
      dockerfile: ./collector/Dockerfile
    depends_on:
      - db
      - rabbitmq
    environment:
      SERVER_PORT: 8090
      SPRING_PROFILES_ACTIVE: publisher,${SPRING_PROFILES_ACTIVE}
      SPRING_REACTOR_CONTEXT_PROPAGATION: AUTO
      SPRING_DATASOURCE_URL: jdbc:mysql://${DB_URL}:3306/${DB_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_RABBITMQ_HOST: ${SPRING_RABBITMQ_HOST}
      SPRING_RABBITMQ_PORT: ${SPRING_RABBITMQ_PORT}
      SPRING_RABBITMQ_USERNAME: ${SPRING_RABBITMQ_USERNAME}
      SPRING_RABBITMQ_PASSWORD: ${SPRING_RABBITMQ_PASSWORD}
    ports:
      - "8090:8090"
    volumes:
      - ./logs:/logs
    networks:
      - ckt_network
    command:
      -javaagent:/app/pinpoint-agent-2.5.4/pinpoint-bootstrap-2.5.4.jar
      -Dpinpoint.agentId=${HOSTNAME}-collector-app
      -Dpinpoint.applicationName=Ckt-Collector
      -Dprofiler.transport.grpc.collector.ip=pinpoint-collector
      -Dprofiler.collector.ip=pinpoint-collector
      -jar app.jar

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - ckt_network

  grafana:
    image: grafana/grafana
    ports:
      - "3333:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - ckt_network

  rabbitmq:
    container_name: rabbitmq
    build:
      context: ./mq
      dockerfile: Dockerfile
    ports:
      - "5672:5672"     # AMQP 통신 포트
      - "15672:15672"   # 관리 콘솔 포트
    environment:
      RABBITMQ_DEFAULT_USER: ${SPRING_RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${SPRING_RABBITMQ_PASSWORD}
    networks:
      - ckt_network

  rabbitmq-exporter:
    build:
      context: ./mq-exporter
      dockerfile: Dockerfile
    ports:
      - "9419:9419"
    environment:
      RABBIT_URL: ${SPRING_RABBITMQ_URL}
      RABBIT_USER: ${SPRING_RABBITMQ_USERNAME}
      RABBIT_PASSWORD: ${SPRING_RABBITMQ_PASSWORD}
    networks:
      - ckt_network
    depends_on:
      - rabbitmq


volumes:
  db_data:
  grafana-storage:
    driver: local

networks:
  ckt_network:
    name: ckt_network
    driver: bridge
